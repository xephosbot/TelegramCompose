//
// NOTE: THIS FILE IS AUTO-GENERATED by the "ExtensionsGenerator".kt
// See: https://github.com/tdlibx/td-ktx-generator/
//
package com.xbot.tdlibx.extensions

import com.xbot.tdlibx.core.TelegramFlow
import com.xbot.tdlibx.coroutines.terminateSession
import com.xbot.tdlibx.coroutines.toggleSessionCanAcceptCalls
import com.xbot.tdlibx.coroutines.toggleSessionCanAcceptSecretChats
import org.drinkless.tdlib.TdApi
import org.drinkless.tdlib.TdApi.Session

/**
 * Interface for access [TdApi.Session] extension functions. Can be used alongside with other
 * extension interfaces of the package. Must contain [TelegramFlow] instance field to access its
 * functionality
 */
interface SessionKtx : BaseKtx {
  /**
   * Instance of the [TelegramFlow] connecting extensions to the Telegram Client
   */
  override val api: TelegramFlow

  /**
   * Suspend function, which terminates a session of the current user.
   */
  suspend fun Session.terminate() = api.terminateSession(this.id)

  /**
   * Suspend function, which toggles whether a session can accept incoming calls.
   *
   * @param canAcceptCalls Pass true to allow accepting incoming calls by the session; pass false
   * otherwise.
   */
  suspend fun Session.toggleCanAcceptCalls(canAcceptCalls: Boolean) =
      api.toggleSessionCanAcceptCalls(this.id, canAcceptCalls)

  /**
   * Suspend function, which toggles whether a session can accept incoming secret chats.
   *
   * @param canAcceptSecretChats Pass true to allow accepting secret chats by the session; pass
   * false otherwise.
   */
  suspend fun Session.toggleCanAcceptSecretChats(canAcceptSecretChats: Boolean) =
      api.toggleSessionCanAcceptSecretChats(this.id, canAcceptSecretChats)
}
